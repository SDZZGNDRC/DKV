syntax = "proto3";

package DKV.pb;

option go_package = "DKV/proto";

message AppendEntriesArgs {
    int64 Term = 1;
    int64 LeaderId = 2;
    int64 PrevLogIndex = 3;
    int64 PrevLogTerm = 4;
    repeated Entry Entries = 5;
    int64 LeaderCommit = 6;
}

message Entry {
    int64 Term = 1;
    bytes Cmd = 2;
}

message AppendEntriesReply {
    int64 Term = 1;
    bool Success = 2;
    int64 XTerm = 3;
    int64 XIndex = 4;
    int64 XLen = 5;
}

message RequestVoteArgs {
    int64 Term = 1;
    int64 CandidateId = 2;
    int64 LastLogIndex = 3;
    int64 LastLogTerm = 4;
}

message RequestVoteReply {
    int64 Term = 1;
    bool VoteGranted = 2;
}

message InstallSnapshotArgs {
    int64 Term = 1;
    int64 LeaderId = 2;
    int64 LastIncludedIndex = 3;
    int64 LastIncludedTerm = 4;
    bytes Data = 5;
    bytes LastIncludedCmd = 6;
}

message InstallSnapshotReply {
    int64 Term = 1;
}

service raft {
    rpc AppendEntries (AppendEntriesArgs) returns (AppendEntriesReply);
    rpc RequestVote (RequestVoteArgs) returns (RequestVoteReply);
    rpc InstallSnapshot (InstallSnapshotArgs) returns (InstallSnapshotReply);
}

message PutAppendArgs {
    string Key = 1;
    string Value = 2;
    string Op = 3;
    uint64 Seq = 4;
    int64 Identifier = 5;
}

message PutAppendReply {
    string Err = 1;
}

message GetArgs {
    string Key = 1;
    uint64 Seq = 2;
    int64 Identifier = 3;
}

message GetReply {
    string Err = 1;
    string Value = 2;
}

service kvserver {
    rpc Get(GetArgs) returns (GetReply);
    rpc PutAppend(PutAppendArgs) returns (PutAppendReply);
}
